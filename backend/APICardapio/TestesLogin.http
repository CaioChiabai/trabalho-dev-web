### TESTES COMPLETOS DO SISTEMA DE LOGIN
### Use este arquivo para testar todas as funcionalidades do login

# Primeiro, vamos garantir que temos um usuário para testar
# Execute este teste primeiro para criar um usuário

### 1. CRIAR USUÁRIO DE TESTE
POST http://localhost:5000/api/usuarios
Content-Type: application/json

{
  "nome": "TesteLogin",
  "email": "teste@login.com",
  "senha": "123456"
}

###

### 2. LOGIN COM CREDENCIAIS VÁLIDAS - TESTE BÁSICO
POST http://localhost:5000/api/usuarios/login
Content-Type: application/json

{
  "email": "teste@login.com",
  "senha": "123456"
}

###

### 3. LOGIN COM EMAIL INEXISTENTE - DEVE RETORNAR 401
POST http://localhost:5000/api/usuarios/login
Content-Type: application/json

{
  "email": "emailinexistente@teste.com",
  "senha": "123456"
}

###

### 4. LOGIN COM SENHA INCORRETA - DEVE RETORNAR 401
POST http://localhost:5000/api/usuarios/login
Content-Type: application/json

{
  "email": "teste@login.com",
  "senha": "senhaerrada"
}

###

### 5. LOGIN COM CAMPOS VAZIOS - TESTE VALIDAÇÃO
POST http://localhost:5000/api/usuarios/login
Content-Type: application/json

{
  "email": "",
  "senha": ""
}

###

### 6. LOGIN SEM CAMPO EMAIL - TESTE VALIDAÇÃO
POST http://localhost:5000/api/usuarios/login
Content-Type: application/json

{
  "senha": "123456"
}

###

### 7. LOGIN SEM CAMPO SENHA - TESTE VALIDAÇÃO
POST http://localhost:5000/api/usuarios/login
Content-Type: application/json

{
  "email": "teste@login.com"
}

###

### 8. TESTE COM PAYLOAD MALFORMADO
POST http://localhost:5000/api/usuarios/login
Content-Type: application/json

{
  "email": "teste@login.com",
  "senha": "123456",
  "campoExtra": "valor"
}

###

### 9. TESTE SEM CONTENT-TYPE
POST http://localhost:5000/api/usuarios/login

{
  "email": "teste@login.com",
  "senha": "123456"
}

###

### 10. CRIAR USUÁRIO INATIVO PARA TESTE
POST http://localhost:5000/api/usuarios
Content-Type: application/json

{
  "nome": "UsuarioInativo",
  "email": "inativo@teste.com",
  "senha": "123456"
}

###

### 11. DESATIVAR O USUÁRIO (simular usuário inativo)
# Primeiro, pegue o ID do usuário criado acima e substitua no PUT abaixo
PUT http://localhost:5000/api/usuarios/{{ID_DO_USUARIO_INATIVO}}
Content-Type: application/json

{
  "nome": "UsuarioInativo",
  "email": "inativo@teste.com",
  "ativo": false
}

###

### 12. TENTAR LOGIN COM USUÁRIO INATIVO
POST http://localhost:5000/api/usuarios/login
Content-Type: application/json

{
  "email": "inativo@teste.com",
  "senha": "123456"
}

###

### 13. CRIAR MAIS USUÁRIOS PARA TESTES DIVERSOS
POST http://localhost:5000/api/usuarios
Content-Type: application/json

{
  "nome": "Restaurante Bom Sabor",
  "email": "contato@bomsabor.com",
  "senha": "senha123"
}

###

### 14. LOGIN COM O SEGUNDO USUÁRIO
POST http://localhost:5000/api/usuarios/login
Content-Type: application/json

{
  "email": "contato@bomsabor.com",
  "senha": "senha123"
}

###

### 15. TESTE DE CASE SENSITIVITY NO EMAIL
POST http://localhost:5000/api/usuarios/login
Content-Type: application/json

{
  "email": "TESTE@LOGIN.COM",
  "senha": "123456"
}

###

### 16. TESTE COM ESPAÇOS NO NOME
POST http://localhost:5000/api/usuarios/login
Content-Type: application/json

{
  "nome": " TesteLogin ",
  "senha": "123456"
}

###

### 17. TESTE COM CARACTERES ESPECIAIS
POST http://localhost:5000/api/usuarios/login
Content-Type: application/json

{
  "nome": "TesteLogin",
  "senha": "123456@#$"
}

###

### 18. TESTE DE PERFORMANCE - MÚLTIPLOS LOGINS SEQUENCIAIS
POST http://localhost:5000/api/usuarios/login
Content-Type: application/json

{
  "nome": "TesteLogin",
  "senha": "123456"
}

###

POST http://localhost:5000/api/usuarios/login
Content-Type: application/json

{
  "nome": "TesteLogin",
  "senha": "123456"
}

###

POST http://localhost:5000/api/usuarios/login
Content-Type: application/json

{
  "nome": "TesteLogin",
  "senha": "123456"
}

###

### 19. VALIDAR ESTRUTURA DO TOKEN RETORNADO
# Execute este teste e analise o response para verificar se contém:
# - Id do usuário
# - Nome do usuário  
# - Token JWT válido
POST http://localhost:5000/api/usuarios/login
Content-Type: application/json

{
  "nome": "TesteLogin",
  "senha": "123456"
}

### 20. VERIFICAR SE TODOS OS USUÁRIOS FORAM CRIADOS
GET http://localhost:5000/api/usuarios
