### API Cardápio - Testes HTTP

### 1. Criar um novo usuário
POST http://localhost:5000/api/usuarios
Content-Type: application/json

{
  "nome": "Restaurante Bom Sabor",
  "email": "contato@bomsabor.com",
  "senha": "123456"
}

### 2. Listar todos os usuários
GET http://localhost:5000/api/usuarios

### 3. Obter usuário por ID
GET http://localhost:5000/api/usuarios/1

### 4. Atualizar usuário
PUT http://localhost:5000/api/usuarios/1
Content-Type: application/json

{
  "nome": "Restaurante Bom Sabor Atualizado",
  "email": "novo@bomsabor.com",
  "ativo": true
}

### 5. Criar outro usuário para teste
POST http://localhost:5000/api/usuarios
Content-Type: application/json

{
  "nome": "Pizzaria Italiana",
  "email": "contato@pizzariaitaliana.com",
  "senha": "senha123"
}

### 6. Tentar criar usuário com email duplicado (deve falhar)
POST http://localhost:5000/api/usuarios
Content-Type: application/json

{
  "nome": "Outro Restaurante",
  "email": "contato@bomsabor.com",
  "senha": "123456"
}

### 7. Deletar usuário (soft delete)
DELETE http://localhost:5000/api/usuarios/1

### 8. Verificar se usuário foi marcado como inativo
GET http://localhost:5000/api/usuarios/1

### 9. Acessar documentação Swagger
GET http://localhost:5000/

###
### Testes com dados inválidos
###

### 10. Criar usuário sem nome
POST http://localhost:5000/api/usuarios
Content-Type: application/json

{
  "email": "sem@nome.com",
  "senha": "123456"
}

### 11. Criar usuário com email inválido
POST http://localhost:5000/api/usuarios
Content-Type: application/json

{
  "nome": "Teste Email Inválido",
  "email": "email-invalido",
  "senha": "123456"
}

### 12. Criar usuário com senha muito curta
POST http://localhost:5000/api/usuarios
Content-Type: application/json

{
  "nome": "Teste Senha Curta",
  "email": "senha@curta.com",
  "senha": "123"
}

###
### TESTES DE CATEGORIAS
###

### 13. Listar todas as categorias (deve mostrar as categorias criadas automaticamente)
GET http://localhost:5000/api/categorias

### 14. Obter categoria por ID
GET http://localhost:5000/api/categorias/1

### 15. Criar nova categoria
POST http://localhost:5000/api/categorias
Content-Type: application/json

{
  "nome": "Vinhos",
  "ordem": 6
}

### 16. Atualizar categoria
PUT http://localhost:5000/api/categorias/1
Content-Type: application/json

{
  "nome": "Pratos Principais Especiais",
  "ativo": true,
  "ordem": 1
}

### 17. Tentar criar categoria com nome duplicado (deve falhar)
POST http://localhost:5000/api/categorias
Content-Type: application/json

{
  "nome": "Bebidas",
  "ordem": 7
}

### 18. Deletar categoria
DELETE http://localhost:5000/api/categorias/6

### 19. Verificar se categoria foi marcada como inativa
GET http://localhost:5000/api/categorias/6
